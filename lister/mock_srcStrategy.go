// Code generated by mockery v2.45.1. DO NOT EDIT.

package lister

import (
	model "github.com/joshmedeski/sesh/model"
	mock "github.com/stretchr/testify/mock"
)

// MocksrcStrategy is an autogenerated mock type for the srcStrategy type
type MocksrcStrategy struct {
	mock.Mock
}

type MocksrcStrategy_Expecter struct {
	mock *mock.Mock
}

func (_m *MocksrcStrategy) EXPECT() *MocksrcStrategy_Expecter {
	return &MocksrcStrategy_Expecter{mock: &_m.Mock}
}

// Execute provides a mock function with given fields: _a0
func (_m *MocksrcStrategy) Execute(_a0 *RealLister) (model.SeshSessions, error) {
	ret := _m.Called(_a0)

	if len(ret) == 0 {
		panic("no return value specified for Execute")
	}

	var r0 model.SeshSessions
	var r1 error
	if rf, ok := ret.Get(0).(func(*RealLister) (model.SeshSessions, error)); ok {
		return rf(_a0)
	}
	if rf, ok := ret.Get(0).(func(*RealLister) model.SeshSessions); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(model.SeshSessions)
	}

	if rf, ok := ret.Get(1).(func(*RealLister) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MocksrcStrategy_Execute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Execute'
type MocksrcStrategy_Execute_Call struct {
	*mock.Call
}

// Execute is a helper method to define mock.On call
//   - _a0 *RealLister
func (_e *MocksrcStrategy_Expecter) Execute(_a0 interface{}) *MocksrcStrategy_Execute_Call {
	return &MocksrcStrategy_Execute_Call{Call: _e.mock.On("Execute", _a0)}
}

func (_c *MocksrcStrategy_Execute_Call) Run(run func(_a0 *RealLister)) *MocksrcStrategy_Execute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*RealLister))
	})
	return _c
}

func (_c *MocksrcStrategy_Execute_Call) Return(_a0 model.SeshSessions, _a1 error) *MocksrcStrategy_Execute_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MocksrcStrategy_Execute_Call) RunAndReturn(run func(*RealLister) (model.SeshSessions, error)) *MocksrcStrategy_Execute_Call {
	_c.Call.Return(run)
	return _c
}

// NewMocksrcStrategy creates a new instance of MocksrcStrategy. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMocksrcStrategy(t interface {
	mock.TestingT
	Cleanup(func())
}) *MocksrcStrategy {
	mock := &MocksrcStrategy{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
