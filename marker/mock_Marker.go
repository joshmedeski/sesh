// Code generated by MockGen. DO NOT EDIT.
// Source: marker.go

// Package marker is a generated GoMock package.
package marker

import (
	mock "github.com/stretchr/testify/mock"
)

// MockMarker is a mock of Marker interface.
type MockMarker struct {
	mock.Mock
}

// GetMarkedSessions mocks base method.
func (m *MockMarker) GetMarkedSessions() ([]MarkedSession, error) {
	ret := m.Called()
	ret0, _ := ret.Get(0).([]MarkedSession)
	ret1, _ := ret.Get(1).(error)
	return ret0, ret1
}

// GetMarkedSessionsForSession mocks base method.
func (m *MockMarker) GetMarkedSessionsForSession(session string) ([]MarkedSession, error) {
	ret := m.Called(session)
	ret0, _ := ret.Get(0).([]MarkedSession)
	ret1, _ := ret.Get(1).(error)
	return ret0, ret1
}

// IsMarked mocks base method.
func (m *MockMarker) IsMarked(session, window string) bool {
	ret := m.Called(session, window)
	ret0, _ := ret.Get(0).(bool)
	return ret0
}

// Mark mocks base method.
func (m *MockMarker) Mark(session, window string) error {
	ret := m.Called(session, window)
	ret0, _ := ret.Get(0).(error)
	return ret0
}

// Unmark mocks base method.
func (m *MockMarker) Unmark(session, window string) error {
	ret := m.Called(session, window)
	ret0, _ := ret.Get(0).(error)
	return ret0
}